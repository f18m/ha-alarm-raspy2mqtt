name: main CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: install pypi-packaged dependencies
      run: sudo pip3 install build

    # test Python packaging
    - name: package the pypi
      run: |
        python3 -m build

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: install pypi-packaged dependencies
      run: sudo pip3 install black
    - name: lint the code
      run: black .

  docker_push:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: build and push Docker image
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        # options related to BUILDing the docker image:
        multiPlatform: true
        platform: linux/amd64,linux/arm64,linux/arm/v7
        image: raspy-sensors2mqtt
        # options related to PUSHing the docker image:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.PAT_TOKEN_FOR_GITHUB }}

  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: install pypi-packaged dependencies for unit and integration tests
      run: sudo pip3 install pytest testcontainers paho-mqtt

    # FIXME: we should have all dependencies centralized in the TOML file and install them as:
    # - name: Install dependencies
    #   run: |
    #     poetry install --no-interaction --with dev --all-extras
    #     poetry show --tree

    - name: run unit tests
      run: pytest -vvv -m unit


    - name: build docker image
      run: docker build -t ha-alarm-raspy2mqtt:latest .
    - name: run integration tests
      run: pytest -vvv --capture=no -m integration
