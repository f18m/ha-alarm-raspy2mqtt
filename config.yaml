# Sample config file for the ha-alarm-raspy2mqtt utility
# Written by Francesco Montorsi, Feb 2024.

mqtt_broker:
  # the IP or FQDN of the server hosting the MQTT broker:
  host: 192.168.1.5

  # in case the connection with the broker drops, a reconnection will be attempted each X msec:
  reconnection_period_msec: 1500

  # how often should this software re-publish the status of all inputs / outputs inside MQTT?
  # note that this software will publish the status of an input/output even if it didn't change
  # since previous update; the reason is to reset the expire timer associated typically
  # inside HomeAssistant for each MQTT sensor (see the "expire_after" property).
  publish_period_msec: 3000

  # in case your broker has authentication turned on, please provide user/pw
  # TODO: password is cleartext right now, which is insecure
  user: 
  password:


# stats printed on stdout each N secs:
log_stats_every: 30

# opto-isolated inputs are those sampled by the Sequent Microsystem 16ch-optoinsulated board
# NOTE1: a simple wiring for alarm system sensors is to get their NC relay fed with positive voltage on
#        one side and then drive the other wire to the Sequent Microsystem input board; this means the
#        Sequent Microsystem input will normally be high and will go low in case of MOTION DETECTION/CONTACT-OPEN/etc...
#        in other words it's an "active low" pin
# NOTE2: the inputs are numbered 1-based, just like in the silk-screen printing on the board itself
# NOTE3: the MQTT topic will be in the form "home/<input name>", don't use spaces in the name!
# NOTE4: to raise security/robustness of the alarm system, on HomeAssistant the "expire_after" property
#        should be used; the MQTT topics for opto-isolated inputs are continuously updated at a frequency
#        configured by 'mqtt_broker.publish_period_msec'
i2c_optoisolated_inputs:
  - name: opto_input_1
    input_num: 1
    active_low: true
  - name: opto_input_2
    input_num: 2
    active_low: true

# GPIO inputs are those sampled by Raspberry directly using its own GPIO pins (3.3V compatible)
# NOTE1: a fundamental difference with 'i2c_optoisolated_inputs' is that the MQTT topics configured
#        for these GPIO inputs are updated with a message only when the GPIO transition from "inactive -> active"
#        is detected. If no "inactive -> active" transitions are detected, no MQTT messages are published
# NOTE2: the MQTT topic will be in the form "<topic>" and will receive the configured "<payload>"
gpio_inputs:
  - name: radio_channel_a
    gpio: 27
    active_low: false
    mqtt:
      topic: alarmo/command
      payload: ARM_AWAY


# outputs channels are used to drive the SeenGreat 2ch optoinsulated board
# NOTE1: all outputs are active low in this kind of board (i.e. to trigger the relay the GPIO must be driven low)
# NOTE2: the MQTT topic subscribed will be in the form "home/<output name>", don't use spaces in the name!
outputs:
  - name: ext_alarm_siren
    gpio: 20
    active_low: true
  - name: int_alarm_siren
    gpio: 21
    active_low: true
